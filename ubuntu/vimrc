syntax on
set number
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent
set cindent
set autowrite
set ruler
set cursorline
"set background=light
"inoremap ( ()<ESC>i
"inoremap [ []<ESC>i
"inoremap { {}<ESC>i
"inoremap < <><ESC>i

" -------------  
" Vundle  
" https://github.com/gmarik/Vundle.vim  
" -------------  
  
set nocompatible              " be iMproved, required  
filetype off                  " required  
  
" set the runtime path to include Vundle and initialize  
" set rtp+=/home/pirdol/.vim/bundle/Vundle.vim  
set rtp+=~/.vim/bundle/Vundle.vim  
"call vundle#begin()  
call vundle#begin('~/.vim/bundle')
" alternatively, pass a path where Vundle should install plugins  
"call vundle#begin('~/some/path/here')  
  
" let Vundle manage Vundle, required  
Plugin 'gmarik/Vundle.vim'  
Plugin 'fatih/vim-go'  
Plugin 'nsf/gocode', {'rtp': 'vim/'}

" All of your Plugins must be added before the following line  
call vundle#end()            " required  
"filetype plugin indent on    " required  
" To ignore plugin indent changes, instead use:  
"filetype plugin on  
  
" Brief help  
" :PluginList       - lists configured plugins  
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate  
" :PluginSearch foo - searches for foo; append `!` to refresh local cache  
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal  
"  
" see :h vundle for more details or wiki for FAQ  
" Put your non-Plugin stuff after this line  

let g:gofmt_command='goimports'
" 保存Go文件前调用goimports对文件排版并插入/删除相应的import语句
autocmd BufWritePre *.go :Fmt

"taglist
let Tlist_Show_One_File=1 "不同时显示多个文件的tag，只显示当前文件的  
let Tlist_Exit_OnlyWindow=1 "如果taglist窗口是最后一个窗口，则退出vim 
let Tlist_Ctags_Cmd="/usr/bin/ctags" "将taglist与ctags关联
"let Tlist_Auto_Open=1 "启动vim时自动打开taglist窗口

"ctags
set tags+=/home/pirdol/.vim/tags/tags_libstdc++
set tags+=/home/pirdol/.vim/tags/tags_system
set tags+=./tags

set completeopt=menuone,menu
" 当鼠标离开或者退出插入模式时，自动关闭弹出列表
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
map <F5> :make
map <F10> :set paste
map <F11> :set nopaste

" 生成当前目录下的tags快捷键为F12
" SecureCRT里面按Ctrl+F##不起作用，在ubuntu的terminal里面是可以的。
" ctags前面的感叹号是告诉vim后面的命令是shell命令，不是vim内置命令。
map <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q ./

"onmicppcomplete
set nocp " non vi compatible mode
filetype plugin on " 使能插件
let OmniCpp_NamespaceSearch=1
let OmniCpp_GlobalScopeSearch=1
let OmniCpp_ShowAccess=1
let OmniCpp_ShowPrototypeInAbbr=1 " 显示函数参数列表
let OmniCpp_MayCompleteDot=1 " 输入 .  后自动补全
let OmniCpp_MayCompleteArrow=1 " 输入 -> 后自动补全
let OmniCpp_MayCompleteScope=1 " 输入 :: 后自动补全
let OmniCpp_SelectFirstItem=2 " 选择第一项但不插入位置 
let OmniCpp_DefaultNamespaces=["std", "_GLIBCXX_STD"]

"弹出菜单中的所有项和选中项
highlight Pmenu ctermbg=darkred
highlight PmenuSel ctermbg=darkred ctermfg=yellow

"a.vim
let alternateSearchPath='abs:/usr/include/*,abs:/usr/include/c++'

" doxygen toolkit 
let g:DoxygenToolkit_briefTag_pre="@brief  "
let g:DoxygenToolkit_paramTag_pre="@param "
let g:DoxygenToolkit_returnTag="@return   "
let g:DoxygenToolkit_briefTag_funcName="yes"
"let g:DoxygenToolkit_blockHeader="--------------------------------------------------------------------------"
"let g:DoxygenToolkit_blockFooter="----------------------------------------------------------------------------"
"let g:DoxygenToolkit_licenseTag="GPL 2.0"
let g:DoxygenToolkit_licenseTag="Copyright © 2015-2015 pirDOL"
let g:DoxygenToolkit_authorName="pirdol@gmail.com"
let g:doxygen_enhanced_color=1
